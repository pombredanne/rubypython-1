# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _rubyapi
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


Qfalse = _rubyapi.Qfalse
Qtrue = _rubyapi.Qtrue
Qnil = _rubyapi.Qnil
Qundef = _rubyapi.Qundef
LONG2NUM = _rubyapi.LONG2NUM
rb_str_new2 = _rubyapi.rb_str_new2
rb_float_new = _rubyapi.rb_float_new
rb_ary_new2 = _rubyapi.rb_ary_new2
rb_ary_store = _rubyapi.rb_ary_store
rb_inspect = _rubyapi.rb_inspect
rb_protect_ = _rubyapi.rb_protect_
rb_protect = rb_protect_

save_object = _rubyapi.save_object
unsave_object = _rubyapi.unsave_object
rb2py = _rubyapi.rb2py
py2rb = _rubyapi.py2rb
ID2SYM = _rubyapi.ID2SYM
SYM2ID = _rubyapi.SYM2ID
rb_respond_to = _rubyapi.rb_respond_to
rb_funcall2 = _rubyapi.rb_funcall2
rb_funcall = rb_funcall2



